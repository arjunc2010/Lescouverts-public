<?php

namespace Proxies\__CG__\Les\DataBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class OpeningSchedule extends \Les\DataBundle\Entity\OpeningSchedule implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'id', 'restoID', 'mon1', 'mon2', 'mon3', 'tue1', 'tue2', 'tue3', 'wed1', 'wed2', 'wed3', 'thur1', 'thur2', 'thur3', 'fri1', 'fri2', 'fri3', 'sat1', 'sat2', 'sat3', 'sun1', 'sun2', 'sun3');
        }

        return array('__isInitialized__', 'id', 'restoID', 'mon1', 'mon2', 'mon3', 'tue1', 'tue2', 'tue3', 'wed1', 'wed2', 'wed3', 'thur1', 'thur2', 'thur3', 'fri1', 'fri2', 'fri3', 'sat1', 'sat2', 'sat3', 'sun1', 'sun2', 'sun3');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (OpeningSchedule $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', array($id));

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setRestoID($restoID)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRestoID', array($restoID));

        return parent::setRestoID($restoID);
    }

    /**
     * {@inheritDoc}
     */
    public function getRestoID()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRestoID', array());

        return parent::getRestoID();
    }

    /**
     * {@inheritDoc}
     */
    public function setMon1($mon1)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMon1', array($mon1));

        return parent::setMon1($mon1);
    }

    /**
     * {@inheritDoc}
     */
    public function getMon1()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMon1', array());

        return parent::getMon1();
    }

    /**
     * {@inheritDoc}
     */
    public function setMon2($mon2)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMon2', array($mon2));

        return parent::setMon2($mon2);
    }

    /**
     * {@inheritDoc}
     */
    public function getMon2()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMon2', array());

        return parent::getMon2();
    }

    /**
     * {@inheritDoc}
     */
    public function setMon3($mon3)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMon3', array($mon3));

        return parent::setMon3($mon3);
    }

    /**
     * {@inheritDoc}
     */
    public function getMon3()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMon3', array());

        return parent::getMon3();
    }

    /**
     * {@inheritDoc}
     */
    public function setTue1($tue1)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTue1', array($tue1));

        return parent::setTue1($tue1);
    }

    /**
     * {@inheritDoc}
     */
    public function getTue1()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTue1', array());

        return parent::getTue1();
    }

    /**
     * {@inheritDoc}
     */
    public function setTue2($tue2)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTue2', array($tue2));

        return parent::setTue2($tue2);
    }

    /**
     * {@inheritDoc}
     */
    public function getTue2()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTue2', array());

        return parent::getTue2();
    }

    /**
     * {@inheritDoc}
     */
    public function setTue3($tue3)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTue3', array($tue3));

        return parent::setTue3($tue3);
    }

    /**
     * {@inheritDoc}
     */
    public function getTue3()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTue3', array());

        return parent::getTue3();
    }

    /**
     * {@inheritDoc}
     */
    public function setWed1($wed1)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWed1', array($wed1));

        return parent::setWed1($wed1);
    }

    /**
     * {@inheritDoc}
     */
    public function getWed1()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWed1', array());

        return parent::getWed1();
    }

    /**
     * {@inheritDoc}
     */
    public function setWed2($wed2)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWed2', array($wed2));

        return parent::setWed2($wed2);
    }

    /**
     * {@inheritDoc}
     */
    public function getWed2()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWed2', array());

        return parent::getWed2();
    }

    /**
     * {@inheritDoc}
     */
    public function setWed3($wed3)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWed3', array($wed3));

        return parent::setWed3($wed3);
    }

    /**
     * {@inheritDoc}
     */
    public function getWed3()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWed3', array());

        return parent::getWed3();
    }

    /**
     * {@inheritDoc}
     */
    public function setThur1($thur1)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setThur1', array($thur1));

        return parent::setThur1($thur1);
    }

    /**
     * {@inheritDoc}
     */
    public function getThur1()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getThur1', array());

        return parent::getThur1();
    }

    /**
     * {@inheritDoc}
     */
    public function setThur2($thur2)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setThur2', array($thur2));

        return parent::setThur2($thur2);
    }

    /**
     * {@inheritDoc}
     */
    public function getThur2()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getThur2', array());

        return parent::getThur2();
    }

    /**
     * {@inheritDoc}
     */
    public function setThur3($thur3)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setThur3', array($thur3));

        return parent::setThur3($thur3);
    }

    /**
     * {@inheritDoc}
     */
    public function getThur3()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getThur3', array());

        return parent::getThur3();
    }

    /**
     * {@inheritDoc}
     */
    public function setFri1($fri1)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFri1', array($fri1));

        return parent::setFri1($fri1);
    }

    /**
     * {@inheritDoc}
     */
    public function getFri1()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFri1', array());

        return parent::getFri1();
    }

    /**
     * {@inheritDoc}
     */
    public function setFri2($fri2)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFri2', array($fri2));

        return parent::setFri2($fri2);
    }

    /**
     * {@inheritDoc}
     */
    public function getFri2()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFri2', array());

        return parent::getFri2();
    }

    /**
     * {@inheritDoc}
     */
    public function setFri3($fri3)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFri3', array($fri3));

        return parent::setFri3($fri3);
    }

    /**
     * {@inheritDoc}
     */
    public function getFri3()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFri3', array());

        return parent::getFri3();
    }

    /**
     * {@inheritDoc}
     */
    public function setSat1($sat1)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSat1', array($sat1));

        return parent::setSat1($sat1);
    }

    /**
     * {@inheritDoc}
     */
    public function getSat1()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSat1', array());

        return parent::getSat1();
    }

    /**
     * {@inheritDoc}
     */
    public function setSat2($sat2)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSat2', array($sat2));

        return parent::setSat2($sat2);
    }

    /**
     * {@inheritDoc}
     */
    public function getSat2()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSat2', array());

        return parent::getSat2();
    }

    /**
     * {@inheritDoc}
     */
    public function setSat3($sat3)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSat3', array($sat3));

        return parent::setSat3($sat3);
    }

    /**
     * {@inheritDoc}
     */
    public function getSat3()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSat3', array());

        return parent::getSat3();
    }

    /**
     * {@inheritDoc}
     */
    public function setSun1($sun1)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSun1', array($sun1));

        return parent::setSun1($sun1);
    }

    /**
     * {@inheritDoc}
     */
    public function getSun1()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSun1', array());

        return parent::getSun1();
    }

    /**
     * {@inheritDoc}
     */
    public function setSun2($sun2)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSun2', array($sun2));

        return parent::setSun2($sun2);
    }

    /**
     * {@inheritDoc}
     */
    public function getSun2()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSun2', array());

        return parent::getSun2();
    }

    /**
     * {@inheritDoc}
     */
    public function setSun3($sun3)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSun3', array($sun3));

        return parent::setSun3($sun3);
    }

    /**
     * {@inheritDoc}
     */
    public function getSun3()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSun3', array());

        return parent::getSun3();
    }

}
