<?php

namespace Proxies\__CG__\Les\DataBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Product extends \Les\DataBundle\Entity\Product implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'id', 'shopID', 'name', 'category', 'origin', 'country', 'pricePer', 'quantityInitial', 'desUnit', 'price', 'discount', 'discountPrice', 'validFrom', 'validTill', 'description');
        }

        return array('__isInitialized__', 'id', 'shopID', 'name', 'category', 'origin', 'country', 'pricePer', 'quantityInitial', 'desUnit', 'price', 'discount', 'discountPrice', 'validFrom', 'validTill', 'description');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Product $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function setCategory($category)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCategory', array($category));

        return parent::setCategory($category);
    }

    /**
     * {@inheritDoc}
     */
    public function getCategory()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCategory', array());

        return parent::getCategory();
    }

    /**
     * {@inheritDoc}
     */
    public function setCountry($country)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCountry', array($country));

        return parent::setCountry($country);
    }

    /**
     * {@inheritDoc}
     */
    public function getCountry()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCountry', array());

        return parent::getCountry();
    }

    /**
     * {@inheritDoc}
     */
    public function setDesUnit($desUnit)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDesUnit', array($desUnit));

        return parent::setDesUnit($desUnit);
    }

    /**
     * {@inheritDoc}
     */
    public function getDesUnit()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDesUnit', array());

        return parent::getDesUnit();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', array($description));

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', array());

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setDiscount($discount)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDiscount', array($discount));

        return parent::setDiscount($discount);
    }

    /**
     * {@inheritDoc}
     */
    public function getDiscount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDiscount', array());

        return parent::getDiscount();
    }

    /**
     * {@inheritDoc}
     */
    public function setDiscountPrice($discountPrice)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDiscountPrice', array($discountPrice));

        return parent::setDiscountPrice($discountPrice);
    }

    /**
     * {@inheritDoc}
     */
    public function getDiscountPrice()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDiscountPrice', array());

        return parent::getDiscountPrice();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', array($id));

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', array($name));

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', array());

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setOrigin($origin)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOrigin', array($origin));

        return parent::setOrigin($origin);
    }

    /**
     * {@inheritDoc}
     */
    public function getOrigin()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrigin', array());

        return parent::getOrigin();
    }

    /**
     * {@inheritDoc}
     */
    public function setPrice($price)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrice', array($price));

        return parent::setPrice($price);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrice()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrice', array());

        return parent::getPrice();
    }

    /**
     * {@inheritDoc}
     */
    public function setPricePer($pricePer)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPricePer', array($pricePer));

        return parent::setPricePer($pricePer);
    }

    /**
     * {@inheritDoc}
     */
    public function getPricePer()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPricePer', array());

        return parent::getPricePer();
    }

    /**
     * {@inheritDoc}
     */
    public function setQuantityInitial($quantityInitial)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setQuantityInitial', array($quantityInitial));

        return parent::setQuantityInitial($quantityInitial);
    }

    /**
     * {@inheritDoc}
     */
    public function getQuantityInitial()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getQuantityInitial', array());

        return parent::getQuantityInitial();
    }

    /**
     * {@inheritDoc}
     */
    public function setShopID($shopID)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setShopID', array($shopID));

        return parent::setShopID($shopID);
    }

    /**
     * {@inheritDoc}
     */
    public function getShopID()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getShopID', array());

        return parent::getShopID();
    }

    /**
     * {@inheritDoc}
     */
    public function setValidFrom($validFrom)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setValidFrom', array($validFrom));

        return parent::setValidFrom($validFrom);
    }

    /**
     * {@inheritDoc}
     */
    public function getValidFrom()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getValidFrom', array());

        return parent::getValidFrom();
    }

    /**
     * {@inheritDoc}
     */
    public function setValidTill($validTill)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setValidTill', array($validTill));

        return parent::setValidTill($validTill);
    }

    /**
     * {@inheritDoc}
     */
    public function getValidTill()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getValidTill', array());

        return parent::getValidTill();
    }

}
